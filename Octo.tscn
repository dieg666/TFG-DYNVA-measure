[gd_scene load_steps=5 format=2]

[ext_resource path="res://Art/disc1000x1000.png" type="Texture" id=1]
[ext_resource path="res://Octo.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform vec3 color;
uniform float alpha;
bool approx_eq(vec4 c1, vec4 c2) { return all( lessThan( abs( c1 - c2 ), vec4( 0.001, 0.001, 0.001, 0.001) ) ); }
const float SRGB_GAMMA = 1.0 / 2.2;
const float SRGB_INVERSE_GAMMA = 2.2;
const float SRGB_ALPHA = 0.055;

float srgb_to_linear(float channel) {
    if (channel <= 0.04045)
        return channel / 12.92;
    else
        return pow((channel + SRGB_ALPHA) / (1.0 + SRGB_ALPHA), 2.4);
}
vec3 srgb_to_rgb(vec3 srgb) {
    return vec3(
        srgb_to_linear(srgb.r),
        srgb_to_linear(srgb.g),
        srgb_to_linear(srgb.b)
    );
}
float linear_to_srgb(float channel) {
    if(channel <= 0.0031308)
        return 12.92 * channel;
    else
        return (1.0 + SRGB_ALPHA) * pow(channel, 1.0/2.4) - SRGB_ALPHA;
}
vec3 rgb_to_srgb(vec3 rgb) {
    return vec3(
        linear_to_srgb(rgb.r),
        linear_to_srgb(rgb.g),
        linear_to_srgb(rgb.b)
    );
}
void fragment(){
	vec4 curr_color = texture(TEXTURE,UV); // Get current color of pixel
   if (approx_eq(curr_color,vec4(0,0,0,1))){
        COLOR = vec4(color,alpha)
    }else{
        COLOR = curr_color;
    }

}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color = Vector3( 0, 0, 0 )
shader_param/alpha = null

[node name="Octo" type="Node2D"]
position = Vector2( -250, 695 )
script = ExtResource( 2 )

[node name="OctoSprite" type="Sprite" parent="."]
material = SubResource( 2 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 1 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]
rect = Rect2( -50, -50, 100, 100 )

[connection signal="timeout" from="." to="." method="_on_Octo_timeout"]
[connection signal="screen_exited" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
